1912/(1912+10878)
sort(Data)
sort(Data)
Data <- 10,13,10,11,11,9,10,9,9,12,9,8,4,8,10,7,12,14,9,6
sort(Data)
Data <- c(10,13,10,11,11,9,10,9,9,12,9,8,4,8,10,7,12,14,9,6)
sort(Data)
21/4
21*3/4
11-8.25
1.5*2.75
4.125+11
8.25-4.125
622+2275+1912
4809+4585+24459+10878
4809/44731
622+2755+1912
5289/44731
x1 <- c(1,2,3,4,5)
x1[2] <- NULL
8100/10600
81/106
600/10600
81*600/106
25*600/106
81*10000/106
15*10000/106
10000+7641.5
25*10000/106
2358.5+7641.5
100-458.5
(-358.5)*(-358.5)
128522.2/458.5
500-141.5
358.5*358.5
128522.2/141.5
8000-7641.5
128522.2/7641.5
2000-2358.5
128522.2/2358.5
54.49+16.82+908.28+280.31
Data <- c(10,13,10,11,11,9,10,9,9,12,9,8,4,8,10,7,12,14,9,6)
sort(Data)
x2 <- c(1,2,NULL,4,5)
length(x2)
setwd("D:/OUM/ปี2-2/CPE213 Data Models/wk 9")
library('tidyverse')
data <- read.csv("StudentsPerformance.csv")
str(data)
data
summary(data)
data %>%
mutate_if(is.character, as.factor) -> data
#data %>%
#  mutate_if(is.numeric, as.integer) -> data
summary(data)
data %>%
filter(math.score > 50) %>%
ggplot(aes(x = math.score)) + geom_histogram(bins = 25)
data %>%
filter(math.score > 50) %>%
ggplot(aes(x = math.score)) + geom_histogram(bins = 10)
data %>%
filter(math.score > 50) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
data %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
filter(math.score > 50) %>%
data %>%
filter(math.score > 50) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
data %>%
filter(math.score > 50) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
data %>%
filter(math.score > 50) %>%
summarise(n=n()) -> countMatch %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
data %>%
filter(math.score > 50) %>%
summarise(n=n()) -> match.score %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
data %>%
filter(math.score > 50) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10)
data %>%
filter(math.score > 50) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
cdf <- ecdf(match.score)
data %>%
group_by(math.score) %>%
summarise(count = n()) -> araiwa
plot(cdf)
mathcdf <- ecdf(araiwa$count)
plot(mathcdf)
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
library('tidyverse')
data <- read.csv("StudentsPerformance.csv")
str(data)
#data %>%
#  mutate_if(is.character, as.factor) -> data
#data %>%
#  mutate_if(is.numeric, as.integer) -> data
summary(data)
data %>%
filter(math.score > 50) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 20, color = 'black')
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 25, color = 'black')
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 20, color = 'black')
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 15, color = 'black')
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore%>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = count),bins = 10, color = 'black')
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
library('tidyverse')
data <- read.csv("StudentsPerformance.csv")
str(data)
summary(data)
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
data %>%
#filter(math.score > 20) %>%
ggplot() + geom_histogram(aes(x = math.score),bins = 10, color = 'black')
data %>%
group_by(math.score) %>%
summarise(count = n()) -> MathScore
mathcdf <- ecdf(MathScore$count)
plot(mathcdf)
#Sampling
quantile(MathScore$count, runif(10))
#Sampling
quantile(MathScore$count, rbernoulli(10))
#Sampling
quantile(MathScore$count, rgamma(10))
#Sampling
quantile(MathScore$count, rexp(10))
#Sampling
quantile(MathScore$count, rdunif(10))
#Sampling
quantile(MathScore$count, rnorm(10))
#Sampling
quantile(MathScore$count, runif(10))
