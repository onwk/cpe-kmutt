CREATE TABLE Staff (
	Staff_ID		INT	NOT NULL	AUTO_INCREMENT,
	Staff_fName	Varchar(64)	NOT NULL,
	Staff_lName	Varchar(64)	NOT NULL,
	DOB		Date		NOT NULL,
	JobTitle		Varchar(64)	NOT NULL,
	Salary		Float		NOT NULL,
	Email		Varchar(64)	NOT NULL,
	Password		Varchar(16)	NOT NULL,
	PRIMARY KEY (Staff_ID)
	);

CREATE TABLE Customer (
	Customer_ID	INT	NOT NULL	AUTO_INCREMENT,
	Customer_fname	Varchar(64)	NOT NULL,
	Customer_lname	Varchar(64)	NOT NULL,
	Email		Varchar(64)	NOT NULL,
	Password		Varchar(16)	NOT NULL,
	Address		Varchar(128)	NOT NULL,
	Contract		Varchar(10)	NOT NULL,
	PRIMARY KEY(Customer_ID)
	);

CREATE TABLE CustomerBooking (
	Customer_ID	Varchar(11)	NOT NULL,
	BookingNo	INT	NULL		AUTO_INCREMENT,
	ResBNo		INT	NULL		AUTO_INCREMENT,
	BookingDate	Timestamp	NOT NULL,
	PRIMARY KEY(Customer_ID, BookingNo, ResBNo)
	FOREIGN KEY(Customer_ID) REFERENCES Customer(Customer_ID)	ON UPDATE CASCADE
								ON DELETE NO ACTION
	);

CREATE TABLE RoomBooking (
	BookingNo	Varchar(11)	NOT NULL,
	Staff_ID		Varchar(9)	NOT NULL,
	DateCheckIn	Timestamp	NOT NULL,
	DateCheckOut	Timestamp	NOT NULL,
	PromotionCode	Varchar(7)	NULL,
	NumberOfGuest	INT		NOT NULL,
	Total Charge	FLOAT		NOT NULL,
	PaymentMethod	Varchar(32)	NOT NULL,
	RefNo		Varchar(18)	NOT NULL,
	PRIMARY KEY (BookingNo),
	FOREIGN KEY (BookingNo) REFERENCES CustomerBooking(BookingNo),
	FOREIGN KEY (Staff_ID) REFERENCES Staff(Staff_ID) ,
	FOREIGN KEY(PromotionCode) REFERENCES PromotionType(PromotionCode)
							ON UPDATE CASCADE
							ON DELETE SET NULL	
	);

CREATE TABLE RoomAvailable (
	RoomNo		Varchar(4)	NOT NULL,
	RoomType	Varchar(10)	NOT NULL,
	Status		Tinyint(1)		NOT NULL,
	PRIMARY KEY (RoomNo),
	FOREIGN KEY (RoomType) REFERENCES TypeOfRoom(RoomType)
	);

CREATE TABLE TypeOfRoom (
	RoomType	Varchar(10)	NOT NULL,
	Capacity		INT		NOT NULL,
	Price		FLOAT		NOTNULL,
	PRIMARY KEY (RoomType)
	);

CREATE TABLE Room_detail (
	BookingNo	Varchar(11)	NOT NULL,
	RoomNo		Varchar(4)	NOT NULL,
	ServiceCode	Varchar(5)	NULL,
	CountOfService	INT		NOT NULL,
	PRIMARY KEY (BookingNo, RoomNo, ServiceCode),
	FOREIGN KEY (BookingNo) REFERENCES RoomBoking(BookingNo),
	FOREIGN KEY (RoomNo) REFERENCES RoomAvailable(RoomNo),
	FOREIGN KEY (ServiceCode) REFERENCES Service(ServiceCode)
	);

CREATE TABLE Service (
	ServiceCode	Varchar(5)	NOT NULL,
	ServiceName	Varchar(10)	NOT NULL,
	Charge		FLOAT		NOT NULL,
	PRIMARY KEY (ServiceCode)
	);

CREATE TABLE RestaurantBooking (
	ResBNo		Varchar(11)	NOT NULL,
	Staff_ID		Varchar(9)	NOT NULL,
	PromotionCode	Varchar(7)	NULL,
	NumberOfGuest	INT		NOT NULL,
	TotalCharge	FLOAT		NOT NULL,
	PaymentMethod	Varchar(32)	NOT NULL,
	RefNo		Varchar(18)	NOT NULL,
	PRIMARY KEY (ResBNo),
	FOREIGN KEY (ResBNo) REFERENCES CostomerBooking(ResBNo),
	FOREIGN KEY (Staff_ID) REFERENCES Staff(Staff_ID),
	FOREIGN KEY (PromotionCode) REFERENCES PromotionType(PromotionCode)
							ON UPDATE CASCADE
							ON DELETE SET NULL
	);

CREATE TABLE ResB_detail (
	ResBNo		Varchar(11)	NOT NULL,
	TableNo		INT		NOT NULL,
	PRIMARY KEY (ResBNo, TableNo)
	FOREIGN KEY (ResBNo) REFERENCES RestaurantBooking(ResBNo),
	FOREIGN KEY (TableNo) REFERENCES Table(TableNo)
	);

CREATE TABLE Table (
	TableNo		INT		NOT NULL,
	BuffetRound	Varchar(64)	NOT NULL,
	Status		Tinyint(1)		NOT NULL,
	PRIMARY KEY (TableNo, BuffetRound)
	);

CREATE TABLE BuffetRound(
	BuffetRound	Varchar(64)	NOT NULL,
	Charge		FLOAT 		NOT NULL,
	PRIMARY KEY (BuffetRound)
	);

CREATE TABLE PromotionType (
	PromotionCode	Varchar(7)	NOT NULL,
	PromotionName	Varchar(32)	NOT NULL,
	PromotionDetail	Varchar(500)	NOT NULL,
	Start		Date		NOT NULL,
	Exp		Date		NOT NULL,
	Discount		FLOAT		NOT NULL,
	PRIMARY KEY (PromotionCode)
	);

CREATE TABLE Invoice (
	InvoiceNo	Varchar(12)	NOT NULL,
	BookingNo	Varchar(11)	NULL,
	ResBNo		Varchar(11)	NULL,
	Customer_ID	Varchar(11)	NOT NULL,
	Staff_ID		Varchar(9)	NOT NULL,
	Tax		FLOAT		NOT NULL,
	Date		Date		NOT NULL,
	PRIMARY KEY (InvoiceNo),
	FOREIGN KEY (BookingNo) REFERENCES RoomBooking(BookingNo),
	FOREIGN KEY (ResBNo) REFERENCES RestaurantBooking(ResBNo),
	FOREIGN KEY (Customer_ID) REFERENCES Customer(Customer_ID),
	FOREIGN KEY(Staff_ID) REFERENCES Staff(Staff_ID)
	);